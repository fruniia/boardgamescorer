@page "/kingdomino"
@layout KingDominoLayout
@rendermode InteractiveServer

<EditForm EditContext="_editContext" FormName="myForm" OnValidSubmit="HandleSubmit">
	<DataAnnotationsValidator />
	<ValidationSummary />
	<div class="form-group mb-3">
		<InputSelect id="terrain" class="form-select" @bind-Value=Model!.Terrain>
			@if(Model!.Terrain is null)
			{
				<option selected value="">--Select Terrain--</option>
			}
			else
			{
				<option value=""></option>
			}
			@foreach (var terrain in Terrains)
			{
				if (terrain == "Castle")
				{
					<option hidden>--Select Terrain--</option>
				}
				else
				{
					<option value="@terrain">@terrain</option>
				}
			}
		</InputSelect>
		<ValidationMessage For="@(() => @Model.Terrain)" />
	</div>

	<div class="form-group mb-3">
		<label class="form-label" for="tiles">How many tiles?</label>
		<NumberInput TValue="int" id="tiles" @bind-Value=Model.Tiles EnableMinMax="true" Min="1" Max="24" Placeholder="Enter number of tiles"></NumberInput>
		<ValidationMessage For="@(() => Model.Tiles)" />
	</div>

	<div class="form-group mb-3">
		<label class="form-label" for="crown">How many crowns?</label>
		<InputSelect id="crown" class="form-select" @bind-Value=Model.Crowns>

			@foreach (var crown in Crowns)
			{
				<option value="@crown">@crown</option>
			}

		</InputSelect>
		<ValidationMessage For="@(() => Model!.Crowns)" />
	</div>

	<Button Type="ButtonType.Submit" Color="ButtonColor.Light">
		Confirm
	</Button>
</EditForm>


@if (registration.Count > 0)
{
	<ScoreInputDisplay Registration="registration"></ScoreInputDisplay>
}